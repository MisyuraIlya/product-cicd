version: '3'

networks:
  nginx-php81-mysql8-node:

services:

  # nginx
  nginx-service:
    image: nginx:stable-alpine
    container_name: nginx-container-template-product
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/project
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php81-service
      - mysql8-service
      - phpmyadmin-service
      - react-front-end
    networks:
      - nginx-php81-mysql8-node

  # php
  php81-service:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php81-container-template-product
    ports:
      - "9000:9000"
    volumes:
      - ./backend:/var/www/project
    networks:
      - nginx-php81-mysql8-node

  # mysql
  mysql8-service:
    image: mysql:8
    container_name: mysql8-container-template-product
    ports:
      - "4306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
    networks:
      - nginx-php81-mysql8-node

  # phpMyAdmin
  phpmyadmin-service:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-container-template-product
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql8-service
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - nginx-php81-mysql8-node

  # React Front-End
  react-front-end:
    build:
      context: ./front
      dockerfile: ./Dockerfile
    container_name: react-front-end-container-product
    ports:
      - "3000:3000"
    volumes:
      - ./front:/usr/src/app
    networks:
      - nginx-php81-mysql8-node
